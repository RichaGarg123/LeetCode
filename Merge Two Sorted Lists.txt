/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode MergeTwoLists(ListNode l1, ListNode l2) {
        ListNode temp=new ListNode(0);
        ListNode head=new ListNode(0);
        if(l1 ==null && l2==null)
        {
            head=null;
            
        }
       else  if(l1!=null && l2==null)
        {
            head=l1;
        }
        else if(l1==null && l2 != null)
        {
            head=l2;
        }
        else
        {
        if(l1.val <=l2.val)
        {
            temp=l1;
            head=temp;
            l1=l1.next;
        }
        else 
        {
            temp=l2;
            head=temp;
            l2=l2.next;
        }
        while(l1 !=null && l2!=null)
        {
            if(l1.val<=l2.val)
            {
                temp.next=l1;
                temp=temp.next;
                l1=l1.next;
            }
            else
            {
                temp.next=l2;
                temp=temp.next;
                l2=l2.next;
            }
        }
        while(l1!=null)
        {
            temp.next=l1;
            temp=temp.next;
            l1=l1.next;
        }
        while(l2!=null)
        {
             temp.next=l2;
            temp=temp.next;
            l2=l2.next;
        }
        }
        return head;
        
    }
}